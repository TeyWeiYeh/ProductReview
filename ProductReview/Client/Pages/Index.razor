@page "/"
@inject HttpClient _client
@inject NavigationManager _navManager
@attribute [Authorize]


@if(News == null && Categories == null)
{
    <div class="alert alert-info">Loading news...</div>
}
else
{
    <div class="container">
        <div class="news-group-title">
            @if(Categories.Any(cat => cat.Name.Contains("phone", StringComparison.OrdinalIgnoreCase)))
            {
                <i class="bi bi-phone"></i>
                <h4><strong>SMARTPHONE ARTICLE</strong></h4>
            }
        </div>
        <div class="news-group">
            @foreach (var cat in Categories.Where(r => r.Name.Contains("phone", StringComparison.OrdinalIgnoreCase)))
            {
                if (!News.Any(r => r.CategoryId == cat.Id))
                {
                    <h4>There are no news articles</h4>
                }
                else
                {
                    @foreach (var news in News.Where(q => q.CategoryId == cat.Id))
                    {
                        <div class="news-card">
                            <div class="image">
                                <img src="@news.Image" alt="Image of news article" />
                            </div>
                            <div class="body">
                                <div class="title">
                                    <strong><a href="/news/view/@news.Id">@news.Title</a></strong>
                                </div>
                                <div class="desc">
                                    <p>
                                        <a href="/news/view/@news.Id">@news.Description </a>
                                    </p>
                                </div>

                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
    <div class="container">
        <div class="news-group-title">
            
            @if(Categories.Any(cat => cat.Name.Contains("laptop", StringComparison.OrdinalIgnoreCase)))
            {
                <i class="bi bi-laptop"></i>
                <h4><strong>LAPTOP ARTICLE</strong></h4>
            }
        </div>
        <div class="news-group">
            @foreach (var cat in Categories.Where(r => r.Name.Contains("laptop", StringComparison.OrdinalIgnoreCase)))
            {
                if (!News.Any(r => r.CategoryId == cat.Id))
                {
                    <h4>There are no news articles</h4>
                }
                else
                {
                    @foreach (var news in News.Where(q => q.CategoryId == cat.Id))
                    {
                        <div class="news-card">
                            <div class="image">
                                <img src="@news.Image" alt="Image of news article" />
                            </div>
                            <div class="body">
                                <div class="title">
                                    <strong><a href="/news/view/@news.Id">@news.Title</a></strong>
                                </div>
                                <div class="desc">
                                    <p>
                                        <a href="/news/view/@news.Id">@news.Description </a>
                                    </p>
                                </div>

                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
    <div class="container">
        <div class="news-group-title">
            
            @if (Categories.Any(cat => cat.Name.Contains("tablet", StringComparison.OrdinalIgnoreCase)))
            {
                <i class="bi bi-tablet"></i>
                <h4><strong>TABLET ARTICLE</strong></h4>
            }
        </div>
        <div class="news-group">
            @foreach (var cat in Categories.Where(r => r.Name.Contains("tablet", StringComparison.OrdinalIgnoreCase)))
            {
                if (!News.Any(r => r.CategoryId == cat.Id))
                {
                    <h4>There are no news articles</h4>
                }
                else
                {
                    @foreach (var news in News.Where(q => q.CategoryId == cat.Id))
                    {
                        <div class="news-card">
                            <div class="image">
                                <img src="@news.Image" alt="Image of news article" />
                            </div>
                            <div class="body">
                                <div class="title">
                                    <strong><a href="/news/view/@news.Id">@news.Title</a></strong>
                                </div>
                                <div class="desc">
                                    <p>
                                        <a href="/news/view/@news.Id">@news.Description </a>
                                    </p>
                                </div>

                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
    <div class="container">
        <div class="news-group-title">
            @if (Categories.Any(cat => cat.Name.Contains("smartwatch", StringComparison.OrdinalIgnoreCase)))
            {
                <i class="bi bi-smartwatch"></i>
                <h4><strong>SMARTWATCH ARTICLE</strong></h4>
            }
        </div>
        <div class="news-group">
            @foreach (var cat in Categories.Where(r => r.Name.Contains("smartwatch", StringComparison.OrdinalIgnoreCase)))
            {
                if(!News.Any(r=>r.CategoryId == cat.Id))
                {
                    <h4>There are no news articles</h4>
                }
                else
                {
                    @foreach (var news in News.Where(q => q.CategoryId == cat.Id))
                    {
                        <div class="news-card">
                            <div class="image">
                                <img src="@news.Image" alt="Image of news article" />
                            </div>
                            <div class="body">
                                <div class="title">
                                    <strong><a href="/news/view/@news.Id">@news.Title</a></strong>
                                </div>
                                <div class="desc">
                                    <p>
                                        <a href="/news/view/@news.Id">@news.Description </a>
                                    </p>
                                </div>

                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
}




@code{
    private List<News>? News;
    private List<Category>? Categories;

    protected async override Task OnInitializedAsync(){
        News = await _client.GetFromJsonAsync<List<News>>($"{Endpoints.NewsEndpoint}");
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }

    
}




