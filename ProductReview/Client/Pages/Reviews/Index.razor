@page "/reviews/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]



<h3>Review</h3>

<a href="/reviews/create" class="btn btn-secondary">
	<span class="oi oi-plus" ></span>
	Write a review
</a>
<br />
<br />





@if (Reviews == null)
{
	<div class="alert alert-info">Loading Reviews...</div>
}
else
{
	@foreach (var review in Reviews)
	{
		<div class="card border-success mb-3" style="max-width: 36rem;">
			<div class="card-header bg-transparent border-success"><strong>@review.Title</strong></div>
			<div class="card-title">
				<p class="">@review.Description</p>
				<p>Value:</p>
				<p class="star-rating" data-rating="@review.Value"></p>
				<p>Battery Life:</p>
				<p class="star-rating" data-rating="@review.BatteryLife"></p>
				<p>Performance:</p>
				<p class="star-rating" data-rating="@review.Performance"></p>
				<p>User Friendly:</p>
				<p class="star-rating" data-rating="@review.UserFriendly"></p>
			</div>
			<div class="card-body text-success">
				<a href="/reviews/view/@review.Id" class="btn btn-primary">
					@*buttons*@
					<span class="oi oi-book"></span>@*icon of button*@
				</a>
				<a href="/reviews/edit/@review.Id" class="btn btn-warning">
					<span class="oi oi-pencil"></span>
				</a>
				<button class="btn btn-danger" @onclick="@(()=>Delete(review.Id))">
					<span class="oi oi-delete"></span>
				</button>
			</div>
			
			<div class="card-footer bg-transparent border-success">@review.DateCreated</div>
		</div>
	}
	@* <table class="table">
		<thead>
			<tr>
				<th>Reviews</th>
				<th>Description</th>
				<th>Value</th>
				<th>BatteryLife</th>
				<th>Performance</th>
				<th>UserFriendly</th>
				
				<th>Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var review in Reviews)
			{
				<tr>
					<td>@review.Title</td>
					<td>@review.Description</td>
					<td class="star-rating" data-rating="@review.Value"></td>
					<td class="star-rating" data-rating="@review.BatteryLife"></td>
					<td class="star-rating" data-rating="@review.Performance"></td>
					<td class="star-rating" data-rating="@review.UserFriendly"></td>
					
					<td>
						<a href="/reviews/view/@review.Id" class="btn btn-primary">
							<span class="oi oi-book"></span>
						</a>
						<a href="/reviews/edit/@review.Id" class="btn btn-warning">
							<span class="oi oi-pencil"></span>	
						</a>

						<button class="btn btn-danger" @onclick="@(()=>Delete(review.Id))"><span class="oi oi-delete"></span></button>
					</td>
				</tr>
			}
		</tbody>
	</table> *@
}

@code {
	private IList<Review>? Reviews;
	Product product = new Product();

	protected async override Task OnInitializedAsync()
	{
		Reviews = await _client.GetFromJsonAsync<List<Review>>($"{Endpoints.ReviewsEndpoint}");
	}

	async Task Delete(int reviewId)
	{
		if (Reviews != null)
		{
			var review = Reviews.First(r => r.Id == reviewId);
			var confirm = await js.InvokeAsync<bool>("confirm", $"Are you sure you want to delete {review.Title}?");
			if (confirm)
			{ 
				await _client.DeleteAsync($"{Endpoints.ReviewsEndpoint}/{reviewId}"); 
				await OnInitializedAsync();
			}
		}
	}



}
